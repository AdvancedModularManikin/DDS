// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file AMMPubSubTypes.h
 * This header file contains the declaration of the serialization functions.
 *
 * This file was generated by the tool fastcdrgen.
 */


#ifndef _AMM_DIAGNOSTICS_LOG_AMM_PUBSUBTYPES_H_
#define _AMM_DIAGNOSTICS_LOG_AMM_PUBSUBTYPES_H_

#include <fastrtps/config.h>
#include <fastrtps/TopicDataType.h>

#include "AMM.h"

#if !defined(GEN_API_VER) || (GEN_API_VER != 1)
#error Generated AMM is not compatible with current installed Fast-RTPS. Please, regenerate it with fastrtpsgen.
#endif

namespace AMM
{
    /*!
     * @brief This class represents the TopicDataType of the type FMA_Location defined by the user in the IDL file.
     * @ingroup AMM
     */
    class FMA_LocationPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
        typedef FMA_Location type;

        eProsima_user_DllExport FMA_LocationPubSubType();

        eProsima_user_DllExport virtual ~FMA_LocationPubSubType();
        eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
        eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
        eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
            bool force_md5 = false) override;
        eProsima_user_DllExport virtual void* createData() override;
        eProsima_user_DllExport virtual void deleteData(void * data) override;
        MD5 m_md5;
        unsigned char* m_keyBuffer;
    };
    /*!
     * @brief This class represents the TopicDataType of the type UUID defined by the user in the IDL file.
     * @ingroup AMM
     */
    class UUIDPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
        typedef UUID type;

        eProsima_user_DllExport UUIDPubSubType();

        eProsima_user_DllExport virtual ~UUIDPubSubType();
        eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
        eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
        eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
            bool force_md5 = false) override;
        eProsima_user_DllExport virtual void* createData() override;
        eProsima_user_DllExport virtual void deleteData(void * data) override;
        MD5 m_md5;
        unsigned char* m_keyBuffer;
    };
    namespace Event
    {
        /*!
         * @brief This class represents the TopicDataType of the type Fragment defined by the user in the IDL file.
         * @ingroup AMM
         */
        class FragmentPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Fragment type;

            eProsima_user_DllExport FragmentPubSubType();

            eProsima_user_DllExport virtual ~FragmentPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
        /*!
         * @brief This class represents the TopicDataType of the type FragmentAmendmentRequest defined by the user in the IDL file.
         * @ingroup AMM
         */
        class FragmentAmendmentRequestPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef FragmentAmendmentRequest type;

            eProsima_user_DllExport FragmentAmendmentRequestPubSubType();

            eProsima_user_DllExport virtual ~FragmentAmendmentRequestPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
        /*!
         * @brief This class represents the TopicDataType of the type Record defined by the user in the IDL file.
         * @ingroup AMM
         */
        class RecordPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Record type;

            eProsima_user_DllExport RecordPubSubType();

            eProsima_user_DllExport virtual ~RecordPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
    }
    namespace Environment
    {
        /*!
         * @brief This class represents the TopicDataType of the type Settings defined by the user in the IDL file.
         * @ingroup AMM
         */
        class SettingsPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Settings type;

            eProsima_user_DllExport SettingsPubSubType();

            eProsima_user_DllExport virtual ~SettingsPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
    }
    namespace Simulation
    {
        /*!
         * @brief This class represents the TopicDataType of the type Tick defined by the user in the IDL file.
         * @ingroup AMM
         */
        class TickPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Tick type;

            eProsima_user_DllExport TickPubSubType();

            eProsima_user_DllExport virtual ~TickPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
    }
    /*!
     * @brief This class represents the TopicDataType of the type InstrumentData defined by the user in the IDL file.
     * @ingroup AMM
     */
    class InstrumentDataPubSubType : public eprosima::fastrtps::TopicDataType {
    public:
        typedef InstrumentData type;

        eProsima_user_DllExport InstrumentDataPubSubType();

        eProsima_user_DllExport virtual ~InstrumentDataPubSubType();
        eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
        eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
        eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
        eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
            bool force_md5 = false) override;
        eProsima_user_DllExport virtual void* createData() override;
        eProsima_user_DllExport virtual void deleteData(void * data) override;
        MD5 m_md5;
        unsigned char* m_keyBuffer;
    };
    namespace Physiology
    {


        /*!
         * @brief This class represents the TopicDataType of the type Command defined by the user in the IDL file.
         * @ingroup AMM
         */
        class CommandPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Command type;

            eProsima_user_DllExport CommandPubSubType();

            eProsima_user_DllExport virtual ~CommandPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
        namespace PainStimulus
        {
            /*!
             * @brief This class represents the TopicDataType of the type Data defined by the user in the IDL file.
             * @ingroup AMM
             */
            class DataPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Data type;

                eProsima_user_DllExport DataPubSubType();

                eProsima_user_DllExport virtual ~DataPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
        }
        namespace Sepsis
        {
            /*!
             * @brief This class represents the TopicDataType of the type Data defined by the user in the IDL file.
             * @ingroup AMM
             */
            class DataPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Data type;

                eProsima_user_DllExport DataPubSubType();

                eProsima_user_DllExport virtual ~DataPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
        }
        /*!
         * @brief This class represents the TopicDataType of the type Modification defined by the user in the IDL file.
         * @ingroup AMM
         */
        class ModificationPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Modification type;

            eProsima_user_DllExport ModificationPubSubType();

            eProsima_user_DllExport virtual ~ModificationPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
        /*!
         * @brief This class represents the TopicDataType of the type Node defined by the user in the IDL file.
         * @ingroup AMM
         */
        class NodePubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Node type;

            eProsima_user_DllExport NodePubSubType();

            eProsima_user_DllExport virtual ~NodePubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
        /*!
         * @brief This class represents the TopicDataType of the type HighFrequencyNode defined by the user in the IDL file.
         * @ingroup AMM
         */
        class HighFrequencyNodePubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef HighFrequencyNode type;

            eProsima_user_DllExport HighFrequencyNodePubSubType();

            eProsima_user_DllExport virtual ~HighFrequencyNodePubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
    }
    namespace Render
    {
        /*!
         * @brief This class represents the TopicDataType of the type Modification defined by the user in the IDL file.
         * @ingroup AMM
         */
        class ModificationPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Modification type;

            eProsima_user_DllExport ModificationPubSubType();

            eProsima_user_DllExport virtual ~ModificationPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
    }
    namespace PatientAction
    {
        namespace BioGears
        {
            /*!
             * @brief This class represents the TopicDataType of the type Command defined by the user in the IDL file.
             * @ingroup AMM
             */
            class CommandPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Command type;

                eProsima_user_DllExport CommandPubSubType();

                eProsima_user_DllExport virtual ~CommandPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
        }
    }
    namespace Performance
    {
        /*!
         * @brief This class represents the TopicDataType of the type xAPIModifier defined by the user in the IDL file.
         * @ingroup AMM
         */
        class xAPIModifierPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef xAPIModifier type;

            eProsima_user_DllExport xAPIModifierPubSubType();

            eProsima_user_DllExport virtual ~xAPIModifierPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
        typedef std::vector<AMM::Performance::xAPIModifier> xAPI_Modifiers;
        /*!
         * @brief This class represents the TopicDataType of the type Statement defined by the user in the IDL file.
         * @ingroup AMM
         */
        class StatementPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Statement type;

            eProsima_user_DllExport StatementPubSubType();

            eProsima_user_DllExport virtual ~StatementPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
        /*!
         * @brief This class represents the TopicDataType of the type Assessment defined by the user in the IDL file.
         * @ingroup AMM
         */
        class AssessmentPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Assessment type;

            eProsima_user_DllExport AssessmentPubSubType();

            eProsima_user_DllExport virtual ~AssessmentPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
    }
    namespace Resource
    {
        namespace Requirement
        {
            /*!
             * @brief This class represents the TopicDataType of the type Power defined by the user in the IDL file.
             * @ingroup AMM
             */
            class PowerPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Power type;

                eProsima_user_DllExport PowerPubSubType();

                eProsima_user_DllExport virtual ~PowerPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
            /*!
             * @brief This class represents the TopicDataType of the type Blood defined by the user in the IDL file.
             * @ingroup AMM
             */
            class BloodPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Blood type;

                eProsima_user_DllExport BloodPubSubType();

                eProsima_user_DllExport virtual ~BloodPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
            /*!
             * @brief This class represents the TopicDataType of the type Clear_Liquid defined by the user in the IDL file.
             * @ingroup AMM
             */
            class Clear_LiquidPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Clear_Liquid type;

                eProsima_user_DllExport Clear_LiquidPubSubType();

                eProsima_user_DllExport virtual ~Clear_LiquidPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
            /*!
             * @brief This class represents the TopicDataType of the type Air defined by the user in the IDL file.
             * @ingroup AMM
             */
            class AirPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Air type;

                eProsima_user_DllExport AirPubSubType();

                eProsima_user_DllExport virtual ~AirPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
            /*!
             * @brief This class represents the TopicDataType of the type Cleaning_Solution defined by the user in the IDL file.
             * @ingroup AMM
             */
            class Cleaning_SolutionPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Cleaning_Solution type;

                eProsima_user_DllExport Cleaning_SolutionPubSubType();

                eProsima_user_DllExport virtual ~Cleaning_SolutionPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
        }
        namespace Supply
        {
            /*!
             * @brief This class represents the TopicDataType of the type Power defined by the user in the IDL file.
             * @ingroup AMM
             */
            class PowerPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Power type;

                eProsima_user_DllExport PowerPubSubType();

                eProsima_user_DllExport virtual ~PowerPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
            /*!
             * @brief This class represents the TopicDataType of the type Blood defined by the user in the IDL file.
             * @ingroup AMM
             */
            class BloodPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Blood type;

                eProsima_user_DllExport BloodPubSubType();

                eProsima_user_DllExport virtual ~BloodPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
            /*!
             * @brief This class represents the TopicDataType of the type Clear_Liquid defined by the user in the IDL file.
             * @ingroup AMM
             */
            class Clear_LiquidPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Clear_Liquid type;

                eProsima_user_DllExport Clear_LiquidPubSubType();

                eProsima_user_DllExport virtual ~Clear_LiquidPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
            /*!
             * @brief This class represents the TopicDataType of the type Air defined by the user in the IDL file.
             * @ingroup AMM
             */
            class AirPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Air type;

                eProsima_user_DllExport AirPubSubType();

                eProsima_user_DllExport virtual ~AirPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
            /*!
             * @brief This class represents the TopicDataType of the type Cleaning_Solution defined by the user in the IDL file.
             * @ingroup AMM
             */
            class Cleaning_SolutionPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Cleaning_Solution type;

                eProsima_user_DllExport Cleaning_SolutionPubSubType();

                eProsima_user_DllExport virtual ~Cleaning_SolutionPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
        }
    }
    namespace Capability
    {

        /*!
         * @brief This class represents the TopicDataType of the type AMM_versions defined by the user in the IDL file.
         * @ingroup AMM
         */
        class AMM_versionsPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef AMM_versions type;

            eProsima_user_DllExport AMM_versionsPubSubType();

            eProsima_user_DllExport virtual ~AMM_versionsPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
        /*!
         * @brief This class represents the TopicDataType of the type Configuration defined by the user in the IDL file.
         * @ingroup AMM
         */
        class ConfigurationPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Configuration type;

            eProsima_user_DllExport ConfigurationPubSubType();

            eProsima_user_DllExport virtual ~ConfigurationPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
        /*!
         * @brief This class represents the TopicDataType of the type Scenario defined by the user in the IDL file.
         * @ingroup AMM
         */
        class ScenarioPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Scenario type;

            eProsima_user_DllExport ScenarioPubSubType();

            eProsima_user_DllExport virtual ~ScenarioPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
        /*!
         * @brief This class represents the TopicDataType of the type Status defined by the user in the IDL file.
         * @ingroup AMM
         */
        class StatusPubSubType : public eprosima::fastrtps::TopicDataType {
        public:
            typedef Status type;

            eProsima_user_DllExport StatusPubSubType();

            eProsima_user_DllExport virtual ~StatusPubSubType();
            eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
            eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
            eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
            eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                bool force_md5 = false) override;
            eProsima_user_DllExport virtual void* createData() override;
            eProsima_user_DllExport virtual void deleteData(void * data) override;
            MD5 m_md5;
            unsigned char* m_keyBuffer;
        };
    }
    namespace Diagnostics
    {
        namespace Log
        {
            /*!
             * @brief This class represents the TopicDataType of the type Record defined by the user in the IDL file.
             * @ingroup AMM
             */
            class RecordPubSubType : public eprosima::fastrtps::TopicDataType {
            public:
                typedef Record type;

                eProsima_user_DllExport RecordPubSubType();

                eProsima_user_DllExport virtual ~RecordPubSubType();
                eProsima_user_DllExport virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                eProsima_user_DllExport virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                eProsima_user_DllExport virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                    bool force_md5 = false) override;
                eProsima_user_DllExport virtual void* createData() override;
                eProsima_user_DllExport virtual void deleteData(void * data) override;
                MD5 m_md5;
                unsigned char* m_keyBuffer;
            };
        }
    }
}

#endif // _AMM_DIAGNOSTICS_LOG_AMM_PUBSUBTYPES_H_