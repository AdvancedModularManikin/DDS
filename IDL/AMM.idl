struct FMA_Location
{
    long FMAID;
    string description;
};

struct UUID
{
    long long UUID_MSB;
    long long UUID_LSB;
};

module AMM
{
    enum AssessmentValue {
        OMISSION_ERROR
       ,COMMISSION_ERROR
       ,EXECUTION_ERROR
       ,SUCCESS
    };
    struct Assessment
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Transient Local
         *  Partition: AMM
         */
    {
        UUID id;
        UUID event_id;
        AssessmentValue value;
        string comment;
    };

    struct EventFragment
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Volatile
         *  Partition: AMM
         */
    {
        UUID id;
        unsigned long long timestamp;
        FMA_Location location;
        string practitioner;
        string type;
        string data;
    };

    struct EventRecord
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Transient Local (In case of module disconnect/reconnect)
         *  Liveliness: Automatic, 1 second lease
         *  Partition: AMM
         */
    {
        UUID id;
        unsigned long long timestamp;
        FMA_Location location;
        string practitioner;
        string type;
        string data;
    };

    enum FAR_Status {
        REQUESTING
       ,ACCEPTED
       ,DENIED
    };
    struct FragmentAmendmentRequest
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Volatile
         *  Partition: AMM
         */
    {
        UUID id;
        UUID fragment_id;
        FAR_Status status;
        // Values that can be amended
        unsigned long long timestamp;
        FMA_Location location;
        string practitioner;
        string type;
        string data;
    };

    enum LogLevel {
        FATAL
       ,ERROR
       ,WARN
       ,INFO
       ,DEBUG
       ,TRACE
    };
    struct Log
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Transient Local
         *  Partition: AMM
         */
    {
        unsigned long long timestamp;
        @Key UUID module_id;
        LogLevel level;
        string message;
    };

    struct ModuleConfiguration
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Transient Local
         *  Partition: AMM
         */
    {
        string name;
        @Key string manufacturer;
        @Key string model;
        @Key string serial_number;
        UUID id;
        unsigned long long timestamp;
        octet ip_address[4];
        string capabilities_configuration;
    };

    struct OmittedEvent
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Transient Local (In case of module disconnect/reconnect)
         *  Liveliness: Automatic, 1 second lease
         *  Partition: AMM
         */
    {
        UUID id;
        unsigned long long timestamp;   // When the omission was detected.
        FMA_Location location;
        string practitioner;
        string type;
        string data;
    };

    struct AMM_Version {
        unsigned short major;
        unsigned short minor;
        unsigned short patch;
    };
    struct OperationalDescription
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Transient Local
         *  Partition: AMM
         */
    {
        string name;
        string description;
        @Key string manufacturer;
        @Key string model;
        @Key string serial_number;
        string module_version;
        AMM_Version amm_version;
        string capabilities_schema;
    };

    struct PhysiologyModification
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Transient Local
         *  Partition: AMM
         */
    {
        UUID id;
        UUID event_id;
        string type;
        string data;
    };

    struct PhysiologyValue
        /** QoS:
         *  Reliability: Best Effort
         *  Durability: Transient Local
         *  Ownership: Exclusive
         *  Ownership Strength: Set via Configuration if non-zero
         *  Presentation: Access Scope: Instance, Coherent Access: True, Order Access: False
         *  Liveliness: Automatic, 1 second lease
         *  Partition: AMM
         */
    {
        long long simulation_frame;
        unsigned long long timestamp;
        @Key string name;   // BioGears node path
        string unit;
        double value;
    };

    struct PhysiologyWaveform // Reliable delivery
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Transient Local
         *  Ownership: Exclusive
         *  Ownership Strength: Set via Configuration if non-zero
         *  Liveliness: Automatic, 1 second lease (Lower if feasible, requires testing)
         *  Partition: AMM
         */
    {
        long long simulation_frame;
        unsigned long long timestamp;
        @Key string name;   // BioGears node path
        string unit;
        double value;
    };

    struct RenderModification
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Transient Local
         *  Partition: AMM
         */
    {
        UUID id;
        UUID event_id;
        string type;
        string data;
    };

    enum ControlType {
        RUN
       ,PAUSE
       ,END
       ,SAVE
    };
    struct SimulationControl
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Transient Local
         *  Liveliness: Automatic, 1 second lease
         *  Partition: AMM
         */
    {
        unsigned long long timestamp;
        ControlType type;
    };

    enum StatusValue {
        OPERATIONAL
       ,INOPERATIVE
       ,EXIGENT
    };
    struct Status
        /** QoS:
         *  Reliability: Reliable
         *  Durability: Transient Local
         *  Liveliness: Automatic, 1 second lease
         *  Partition: AMM
         */
    {
        @Key UUID module_id;
        string module_name;
        @Key string capability;
        unsigned long long timestamp;
        StatusValue value;
        string message;
    };
};
