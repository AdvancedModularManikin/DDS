
module AMM {
  module Simulation {	
    struct Tick {
      long long frame; //@key
      float time;
    };
    #pragma keylist Tick frame  
  };
  
  module Physiology {	
       
    struct Node {
      long long frame; 
      string nodepath; //@key
      string unit;
      double dbl;
      string str;
    };
    #pragma keylist Node nodepath
    
    struct HighFrequencyNode {
	  long long frame; 
      string nodepath;  //@key
      string unit;
      double dbl;
      string str;
    };
    #pragma keylist HighFrequencyNode nodepath
    
  };
  
  module PatientAction {
  
	module BioGears {	
		struct Command {
			string message;
		};
		#pragma keylist Command message				
	};
  };    
  
  
  module Performance {	
	struct xAPIModifier {
		string key;
		string value;
	};
	#pragma keylist xAPIModifier key
	
	typedef sequence<xAPIModifier> xAPI_Modifiers;
	
    struct Statement {
      string noun;   // @key
	  xAPI_Modifiers noun_modifiers;
      string verb;
	  xAPI_Modifiers verb_modifiers;
      string obj;
	  xAPI_Modifiers obj_modifiers;
    };
    #pragma keylist Statement noun
  };
  
  module Sys {
    // events?  start?  stop?  pause?  restart?  reload?
    // heartbeat?  errors?  general health?
    
    // This will NOT be in the spec
    module Log {
      struct info {
		string message;
      };      
      
      struct warning {
		string message;
      };
      
      struct error {
		string message;
      };
      
      struct debug {
		string message;
      };     
    };
  };
  
};

