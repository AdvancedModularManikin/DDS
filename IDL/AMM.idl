
module AMM{
        module Simulation {
            struct Tick {
                @Key long long frame;
                float time;
            };
        };

        module Physiology {

            struct Node {
                @Key long long frame;
                @Key string nodepath;
                string unit;
                double dbl;
                string str;
            };

            struct HighFrequencyNode {
                @Key long long frame;
                @Key string nodepath;
                string unit;
                double dbl;
                string str;
            };
        };

        module PatientAction {
            module BioGears{
                    struct Command {
                        string message;
                    };
            };
        };

        module Performance {
            struct xAPIModifier {
                string key;
                string value;
            };

            typedef sequence <xAPIModifier> xAPI_Modifiers;

            struct Statement {
                string noun;
                xAPI_Modifiers noun_modifiers;
                string verb;
                xAPI_Modifiers verb_modifiers;
                string obj;
                xAPI_Modifiers obj_modifiers;
            };
        };

        module Resource {
            module Requirement {
                    struct Power {
                        double volts;
                        double amps;
                    };

                    struct Blood {
                        double volume;
                    };

                    struct Clear_Liquid {
                        double volume;
                    };

                    struct Air {
                        double volume;
                    };

                    struct Cleaning_Solution {
                        double volume;
                    };
            };

            module Supply {
                    struct Power {
                        double volts;
                        double amps;
                    };

                    struct Blood {
                        double volume;
                    };

                    struct Clear_Liquid {
                        double volume;
                    };

                    struct Air {
                        double volume;
                    };

                    struct Cleaning_Solution {
                        double volume;
                    };
            };
        };

        module Capability {
            enum status_values {
                OPERATIONAL,
                HALTING_ERROR,
                IMPENDING_ERROR
            };

            struct AMM_version {
                string software_version;
                string hardware_version;
                string specification_version;
            };

            struct Configuration {
                string manufacturer;
                string model;
                string serial_number;
                string version;
                AMM_version amm_version;
                string capabilities;
            };



            struct Status {
                string capability;
                status_values status_value;
                sequence <string> message;
            };
        };

        // These are not part of the specification
        module Sys {
            module Log{
                    struct info {
                        string message;
                    };

                    struct warning {
                        string message;
                    };

                    struct error {
                        string message;
                    };

                    struct debug {
                        string message;
                    };
            };
        };
};

